import{_ as i,c as a,o as s,ag as o}from"./chunks/framework.DBa8q30c.js";const p=JSON.parse('{"title":".gitignore Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"development/gitignore.md","filePath":"development/gitignore.md"}'),t={name:"development/gitignore.md"};function n(l,e,r,d,c,h){return s(),a("div",null,e[0]||(e[0]=[o(`<h1 id="gitignore-configuration" tabindex="-1">.gitignore Configuration <a class="header-anchor" href="#gitignore-configuration" aria-label="Permalink to &quot;.gitignore Configuration&quot;">​</a></h1><p>This document explains the <code>.gitignore</code> configuration for the NuGet Config Parser project.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The <code>.gitignore</code> file is carefully configured to ignore files that should not be tracked in version control while ensuring that important files are preserved.</p><h2 id="categories-of-ignored-files" tabindex="-1">Categories of Ignored Files <a class="header-anchor" href="#categories-of-ignored-files" aria-label="Permalink to &quot;Categories of Ignored Files&quot;">​</a></h2><h3 id="🔧-go-specific-files" tabindex="-1">🔧 Go-specific Files <a class="header-anchor" href="#🔧-go-specific-files" aria-label="Permalink to &quot;🔧 Go-specific Files&quot;">​</a></h3><ul><li><strong>Binaries</strong>: <code>*.exe</code>, <code>*.dll</code>, <code>*.so</code>, <code>*.dylib</code></li><li><strong>Test files</strong>: <code>*.test</code></li><li><strong>Coverage reports</strong>: <code>coverage.out</code>, <code>coverage.html</code>, <code>coverage.xml</code></li><li><strong>Profiling data</strong>: <code>*.prof</code>, <code>*.pprof</code>, <code>*.trace</code></li><li><strong>Benchmark results</strong>: <code>*.bench</code></li><li><strong>Common binary names</strong>: <code>main</code>, <code>nuget-config-parser</code></li></ul><h3 id="📚-documentation-files" tabindex="-1">📚 Documentation Files <a class="header-anchor" href="#📚-documentation-files" aria-label="Permalink to &quot;📚 Documentation Files&quot;">​</a></h3><ul><li><strong>Node.js dependencies</strong>: <code>docs/node_modules/</code></li><li><strong>VitePress build output</strong>: <code>docs/.vitepress/dist/</code></li><li><strong>VitePress cache</strong>: <code>docs/.vitepress/cache/</code></li><li><strong>Temporary files</strong>: <code>docs/.temp/</code>, <code>docs/.cache/</code></li></ul><h3 id="💻-ide-and-editor-files" tabindex="-1">💻 IDE and Editor Files <a class="header-anchor" href="#💻-ide-and-editor-files" aria-label="Permalink to &quot;💻 IDE and Editor Files&quot;">​</a></h3><ul><li><strong>VS Code</strong>: <code>.vscode/</code> (all settings)</li><li><strong>IntelliJ IDEA</strong>: <code>.idea/</code></li><li><strong>Vim</strong>: <code>*.swp</code>, <code>*.swo</code>, <code>*~</code></li><li><strong>Emacs</strong>: Various Emacs-specific files</li></ul><h3 id="🖥️-operating-system-files" tabindex="-1">🖥️ Operating System Files <a class="header-anchor" href="#🖥️-operating-system-files" aria-label="Permalink to &quot;🖥️ Operating System Files&quot;">​</a></h3><ul><li><strong>macOS</strong>: <code>.DS_Store</code>, <code>.AppleDouble</code>, <code>._*</code></li><li><strong>Windows</strong>: <code>Thumbs.db</code>, <code>desktop.ini</code>, <code>*.lnk</code></li><li><strong>Linux</strong>: <code>.directory</code>, <code>.Trash-*</code>, <code>.nfs*</code></li></ul><h3 id="🎯-project-specific-files" tabindex="-1">🎯 Project-specific Files <a class="header-anchor" href="#🎯-project-specific-files" aria-label="Permalink to &quot;🎯 Project-specific Files&quot;">​</a></h3><ul><li><strong>Example configs</strong>: <code>examples/*/NuGet.Config</code>, <code>examples/*/*.Config</code></li><li><strong>Test artifacts</strong>: <code>test-output/</code>, <code>test-results/</code>, <code>*.test.xml</code></li><li><strong>Temporary configs</strong>: <code>temp-*.config</code>, <code>test-*.config</code>, <code>*.tmp.config</code></li></ul><h2 id="important-files-that-are-tracked" tabindex="-1">Important Files That ARE Tracked <a class="header-anchor" href="#important-files-that-are-tracked" aria-label="Permalink to &quot;Important Files That ARE Tracked&quot;">​</a></h2><p>These files are intentionally tracked and should not be ignored:</p><ul><li><strong><code>go.mod</code></strong> and <strong><code>go.sum</code></strong>: Essential for reproducible builds</li><li><strong><code>docs/package.json</code></strong> and <strong><code>docs/package-lock.json</code></strong>: Documentation dependencies</li><li><strong>Source code</strong>: All <code>.go</code> files</li><li><strong>Documentation</strong>: All <code>.md</code> files</li><li><strong>Configuration</strong>: Project configuration files</li></ul><h2 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h2><p>Use the provided script to validate the <code>.gitignore</code> configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/check-gitignore.sh</span></span></code></pre></div><p>This script will:</p><ul><li>Test that important file types are properly ignored</li><li>Verify that essential files are still tracked</li><li>Check for common configuration mistakes</li><li>Provide helpful tips and warnings</li></ul><h2 id="common-commands" tabindex="-1">Common Commands <a class="header-anchor" href="#common-commands" aria-label="Permalink to &quot;Common Commands&quot;">​</a></h2><h3 id="check-if-a-file-is-ignored" tabindex="-1">Check if a file is ignored <a class="header-anchor" href="#check-if-a-file-is-ignored" aria-label="Permalink to &quot;Check if a file is ignored&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> check-ignore</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filenam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="see-all-ignored-files" tabindex="-1">See all ignored files <a class="header-anchor" href="#see-all-ignored-files" aria-label="Permalink to &quot;See all ignored files&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignored</span></span></code></pre></div><h3 id="force-add-an-ignored-file" tabindex="-1">Force add an ignored file <a class="header-anchor" href="#force-add-an-ignored-file" aria-label="Permalink to &quot;Force add an ignored file&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filenam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="remove-a-tracked-file-and-ignore-it" tabindex="-1">Remove a tracked file and ignore it <a class="header-anchor" href="#remove-a-tracked-file-and-ignore-it" aria-label="Permalink to &quot;Remove a tracked file and ignore it&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cached</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">filenam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Then add the pattern to .gitignore</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="file-is-tracked-but-should-be-ignored" tabindex="-1">File is tracked but should be ignored <a class="header-anchor" href="#file-is-tracked-but-should-be-ignored" aria-label="Permalink to &quot;File is tracked but should be ignored&quot;">​</a></h3><p>If a file is already tracked by Git, adding it to <code>.gitignore</code> won&#39;t ignore it. You need to:</p><ol><li>Remove it from tracking: <code>git rm --cached &lt;filename&gt;</code></li><li>Add the pattern to <code>.gitignore</code></li><li>Commit the changes</li></ol><h3 id="file-is-ignored-but-should-be-tracked" tabindex="-1">File is ignored but should be tracked <a class="header-anchor" href="#file-is-ignored-but-should-be-tracked" aria-label="Permalink to &quot;File is ignored but should be tracked&quot;">​</a></h3><p>If a file is being ignored but you want to track it:</p><ol><li>Check what&#39;s ignoring it: <code>git check-ignore -v &lt;filename&gt;</code></li><li>Either remove the pattern from <code>.gitignore</code> or use <code>git add -f &lt;filename&gt;</code></li></ol><h3 id="global-gitignore-conflicts" tabindex="-1">Global gitignore conflicts <a class="header-anchor" href="#global-gitignore-conflicts" aria-label="Permalink to &quot;Global gitignore conflicts&quot;">​</a></h3><p>Check your global gitignore configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core.excludesfile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core.excludesfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Global rules might conflict with local ones.</p><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><strong>Test changes</strong>: Run <code>./scripts/check-gitignore.sh</code> after modifying <code>.gitignore</code></li><li><strong>Be specific</strong>: Use specific patterns rather than broad wildcards</li><li><strong>Document exceptions</strong>: If you need to track a normally-ignored file, document why</li><li><strong>Regular review</strong>: Periodically review and clean up the <code>.gitignore</code> file</li></ol><h2 id="pattern-examples" tabindex="-1">Pattern Examples <a class="header-anchor" href="#pattern-examples" aria-label="Permalink to &quot;Pattern Examples&quot;">​</a></h2><h3 id="ignore-all-files-with-extension" tabindex="-1">Ignore all files with extension <a class="header-anchor" href="#ignore-all-files-with-extension" aria-label="Permalink to &quot;Ignore all files with extension&quot;">​</a></h3><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*.log</span></span>
<span class="line"><span>*.tmp</span></span></code></pre></div><h3 id="ignore-directory" tabindex="-1">Ignore directory <a class="header-anchor" href="#ignore-directory" aria-label="Permalink to &quot;Ignore directory&quot;">​</a></h3><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>build/</span></span>
<span class="line"><span>temp/</span></span></code></pre></div><h3 id="ignore-files-in-any-subdirectory" tabindex="-1">Ignore files in any subdirectory <a class="header-anchor" href="#ignore-files-in-any-subdirectory" aria-label="Permalink to &quot;Ignore files in any subdirectory&quot;">​</a></h3><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>**/node_modules/</span></span>
<span class="line"><span>**/dist/</span></span></code></pre></div><h3 id="ignore-specific-file" tabindex="-1">Ignore specific file <a class="header-anchor" href="#ignore-specific-file" aria-label="Permalink to &quot;Ignore specific file&quot;">​</a></h3><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config.local.json</span></span>
<span class="line"><span>secret.key</span></span></code></pre></div><h3 id="exception-don-t-ignore" tabindex="-1">Exception (don&#39;t ignore) <a class="header-anchor" href="#exception-don-t-ignore" aria-label="Permalink to &quot;Exception (don&#39;t ignore)&quot;">​</a></h3><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Ignore all .env files</span></span>
<span class="line"><span>.env*</span></span>
<span class="line"><span># But track the example</span></span>
<span class="line"><span>!.env.example</span></span></code></pre></div><h2 id="maintenance" tabindex="-1">Maintenance <a class="header-anchor" href="#maintenance" aria-label="Permalink to &quot;Maintenance&quot;">​</a></h2><p>The <code>.gitignore</code> file should be reviewed and updated when:</p><ul><li>Adding new build tools or dependencies</li><li>Changing development environments</li><li>Adding new file types to the project</li><li>Team members report issues with ignored/tracked files</li></ul><p>For questions or suggestions about the <code>.gitignore</code> configuration, please open an issue or discussion in the project repository.</p>`,60)]))}const u=i(t,[["render",n]]);export{p as __pageData,u as default};
